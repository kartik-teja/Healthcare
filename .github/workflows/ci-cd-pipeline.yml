name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build backend Docker image
        run: docker build -t myapp-backend:latest ./backend

      - name: Build frontend Docker image
        run: docker build -t myapp-frontend:latest ./frontend

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push backend Docker image
        run: docker push myapp-backend:latest

      - name: Push frontend Docker image
        run: docker push myapp-frontend:latest

      - name: Deploy to server
        run: |
          ssh user@yourserver.com <<EOF
          docker pull myapp-backend:latest
          docker pull myapp-frontend:latest
          docker-compose -f /path/to/your/docker-compose.yml up -d
          EOF

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: '#deployments'
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: 'Deployment ${{ job.status }} for commit ${{ github.sha }}'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        run: npm test

env:
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
